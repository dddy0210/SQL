Having절
집계함수에 조건을 줘야할 때 Having에 해야한다.

DCL(Data Controll Language)
-데이터베이스에 접근하고 객체들을 사용하도록 권한을 주고 회수하는 명령어

DCL의종류
-GRANT : 권한 부여
-REVOKE : 권한 강탈

cmd -> sqlplus system/1111

SCOTT의 비밀번호를 tiger로 바꾸기 

유저를 만들기 
CREATE USER 유저명 identified by tiger(비밀번호);

sqlplus->처음에 db에 접속하려고 할때 사용하는 키워드

conn 계정명/비밀번호; ->scott/tiger; 

-scott은 일반계정이고 다른 계정을 생성할 권한이 없다. 
-scott에게 계정을 만들 수 있는 권한을 줘야한다. 
-권한을 주는건 관리자계정이여야 함 

테이블스페이스
-오라클은 데이터를 관리하는 시스템이다.
-따라서 데이터를 어딘가에 저장해놓고 사용해야 하는데, 데이터 저장단위 중 가장 상위 개념이
테이블스페이스이다.
-테이블들을 담을 커다란 공간이 테이블스페이스이다. 

create tablespace 이름 datafile '경로와 이름' size 크기 autoextend크기 (maxsize크기)

-baby라는 이름으로 200mb의 크기로 테이블스페이스 생성하기
-논리적인 개념인 테이블스페이스도 물리적으로는 파일로 존재
-그렇기 때문에 실제로 저장될 파일의 이름과 위치가 필요하다. 
-오라클이 설치된 
'C:\oraclexe\app\oracle\oradata\XE\BABY.DBF'
-데이터가 늘어나 테이블스페이스가 꽉 찰것을 대비해 5MB씩 자동으로 증가시킬 것이다. 

CREATE TABLESPACE BABY DATAFILE'C:\oraclexe\app\oracle\oradata\XE\BABY.DBF'SIZE 200M 
AUTOEXTEND ON NEXT 5M MAXSIZE 300M;

권한주기
GRANT 권한 TO 대상계정;

권한
서버접속관련
CREATE USER 데이터베이스 유저생성권한 
CREATE SESSION 서버에 접속할 수 있도록 세션을 생성할 수 있는 권한
ALTER SESSION 서버에 접속한 상태에서 세션 옵션 변경 가능 권한
RESTRICTED SESSION 제한된 상태로 공개된 데이터베이스에 접속 가능 

테이블 관련
CREATE TABLE 자신의 게정에 테이블 생성 가능
CREATE ANY TABLE 다른 사용자 계정에도 테이블 생성 가능

테이블 스페이스 관련
CREATE TABLESPACE
ALTER TABLESPACE
DROP TABLESPACE
UNLIMITED TABLESPACE

DB에서 유저를 생성 후 기본적으로 아래 세가지 권한을 주면 사용자 계정처럼 사용할 수 있다.

GRAND RESOURCE,CONNECT,DBA TO 대상 

RESOURCE 개체생성, 변경, 제거 권한 
CONNECT DB연결 권한
DBA   DB관리자 권한 

SCOTT에게 계정 생성 권한 주기 
 grant create user to scott

BABY에게 로그인 할 수 있는 권한 주기 
GRANT CREATE SESSION TO 계정명

테이블 스페이스 할당하기 
alter user 계정명 default tablespace 테이블스페이스명; 

임시저장소 저장하기 
alter user baby temporary tablespace TEMP; 

권한은 관리자 계정이 주거나 회수 할 수 있다.

INDEX
-SELECT문을 통해 데이터를 조회하려는 테이블이 너무 방대한 경우,
정렬되지 않은 모든 데이터를 순차적으로 검색하면 조회결과를 구하기까지 너무 오랜 시간 걸린다 
-테이블 내의 원하는 데이터를 빠르게 찾아갈 수 있도록 만들어진 데이터 구조
-도서관에서 원하는 책을 찾는 것과 비슷한 원리이다. 
-도서관 처럼 색인을 통해 정리해두는 것

INDEX의 생성
-테이블 내의 1개의 컬럼 또는 여러개의 컬럼을 이용하여 생성될 수 있다.
-많은 데이터가 있다면 인덱스를 만들어 놓는것이 효과적이다. 
-데이터가 적으면 정리하고 찾는거 보다 그냥 찾는게 더 빠르다. 

자동인덱스
-PRIMARY KEY 또는 UNIQUE에 의해 자동으로 생성되는 INDEX

수동인덱스
-사용자가 직접 생성한 INDEX
CREATE INDEX 인덱스명 ON 테이블명(컬럼1,컬럼2,컬럼3..);

INDEX의 조회
-인덱스는 USER_INDEXS 시스템 뷰에서 조회할 수 있다.
SELECT*FROM ALL_INDEXS WHERE TABLE_NAME = '테이블명';

INDEX 삭제
-조회 성능을 높이기 위해 만든 객체지만 저장공간을 많이 차지하여 DDL작업시 부하가 많이
발생해 전체적인 데이터베이스 성능을 저하시킬 수 있다. 
-DBA는 주기적으로 INDEX를 검토하여 사용하지 않는 INDEX는 삭제하는 것이 전체적인 성능을
향상시킬 수 있다. 

DROP INDEX 인덱스명;

SUBQUERY
-특정 SQL문 안에 또 다른 SQL문장이 포함되어 있는것
-여러번 DB접속이 필요한 상황을 한번으로 줄여 속도를 증가시킬 수 있다. 
-서브쿼리를 사용할 수 있는 곳
-WHERE절, HAVING 절
-SELECT, DELETE의 FROM절
-UPDATE문의 SET

